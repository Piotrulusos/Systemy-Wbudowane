#include <xc.h>
#include <stdio.h>
#include "lcd.h"
#include "buttons.h"
#include "string.h"
#include "adc.h"

#pragma config POSCMOD = XT
#pragma config OSCIOFNC = ON
#pragma config FCKSM = CSDCMD
#pragma config FNOSC = PRI
#pragma config IESO = ON

#pragma config WDTPS = PS32768
#pragma config FWPSA = PR128
#pragma config WINDIS = ON
#pragma config FWDTEN = ON
#pragma config ICS = PGx2
#pragma config GWRP = OFF
#pragma config GCP = OFF
#pragma config JTAGEN = OFF

int czasSekundy = 0;
int czasSekundy2 = 0;
int running = 0;
unsigned long adc_value;
unsigned char sp;
unsigned char poprzedni_sp = 255;

void system_init(void){
    ADC_SetConfiguration(ADC_CONFIGURATION_DEFAULT);
    ADC_ChannelEnable(ADC_CHANNEL_POTENTIOMETER);
    LCD_Initialize();
    TRISA = 0x0000;
    BUTTON_Enable(BUTTON_S6);
    BUTTON_Enable(BUTTON_S3);
    BUTTON_Enable(BUTTON_S4);
    BUTTON_Enable(BUTTON_S5);
}

void display_start_screen(void){
    LCD_ClearScreen();
    LCD_PutString("EPICKI   ZEGAR", 14);
    LCD_PutChar('\n');
    LCD_PutString("SZACHOWY WITA", 14);
}

void wyswietlStatus(void) {
    LCD_ClearScreen();
    char buffer[16];
    int minuty = czasSekundy / 60;
    int sekundy = czasSekundy % 60;
    LCD_PutString("Gracz1 ", 7);
    sprintf(buffer, ": %02d:%02d", minuty, sekundy);
    LCD_PutString(buffer, strlen(buffer));
    LCD_PutChar('\n');
    char buffer2[16];
    int minuty2 = czasSekundy2 / 60;
    int sekundy2 = czasSekundy2 % 60;
    LCD_PutString("Gracz2 ", 7);
    sprintf(buffer2, ": %02d:%02d", minuty2, sekundy2);
    LCD_PutString(buffer2, strlen(buffer2));
}

void Potencjometr(void) {
    while (
        !BUTTON_IsPressed(BUTTON_S3) &&
        !BUTTON_IsPressed(BUTTON_S4)
    ) {
        adc_value = ADC_Read10bit(ADC_CHANNEL_POTENTIOMETER);
        if (adc_value == 0xFFFF) continue;

        sp = (adc_value * 4) / 1024;
        if (sp > 3) sp = 3;

        if (sp != poprzedni_sp) {
            poprzedni_sp = sp;

            switch(sp) {
                case 0:
                    czasSekundy = czasSekundy2 = 15;
                    break;
                case 1:
                    czasSekundy = czasSekundy2 = 60;
                    break;
                case 2:
                    czasSekundy = czasSekundy2 = 180;
                    break;
                case 3:
                    czasSekundy = czasSekundy2 = 300;
                    break;
            }

            wyswietlStatus();
        }

        __delay32(800000);
    }
}

void debounce_button_release(unsigned int button) {
    while(BUTTON_IsPressed(button));
    __delay32(200000);
}

void gotowanie(void){
    while (1) {
        if (running == 1) {
            if (czasSekundy > 0) {
                __delay32(4000000);
                czasSekundy--;
                wyswietlStatus();

                if (BUTTON_IsPressed(BUTTON_S4)) {
                    debounce_button_release(BUTTON_S4);
                    running = 2;
                }
            } else {
                LCD_ClearScreen();
                LCD_PutString("KONIEC CZASU", 12);
                LCD_PutChar('\n');
                LCD_PutString("GRACZA 1 !!!", 12);
                while(1) {
                    LATA = 0xFFFF;
                    __delay32(1000000);
                    LATA = 0x0000;
                    __delay32(1000000);
                }
            }
        }

        if (running == 2) {
            if (czasSekundy2 > 0) {
                __delay32(4000000);
                czasSekundy2--;
                wyswietlStatus();

                if (BUTTON_IsPressed(BUTTON_S3)) {
                    debounce_button_release(BUTTON_S3);
                    running = 1;
                }
            } else {
                LCD_ClearScreen();
                LCD_PutString("KONIEC CZASU", 12);
                LCD_PutChar('\n');
                LCD_PutString("GRACZA 2 !!!", 12);
                while(1) {
                    LATA = 0xFFFF;
                    __delay32(1000000);
                    LATA = 0x0000;
                    __delay32(1000000);
                }
            }
        }
    }
}

void mainLoop(void){
    Potencjometr();
    wyswietlStatus();

    while (1) {
        if (BUTTON_IsPressed(BUTTON_S3)) {
            debounce_button_release(BUTTON_S3);
            running = 1;
            gotowanie();
        }

        if (BUTTON_IsPressed(BUTTON_S4)) {
            debounce_button_release(BUTTON_S4);
            running = 2;
            gotowanie();
        }
    }
}

int main(void){
    system_init();
    display_start_screen();

    while (
        !BUTTON_IsPressed(BUTTON_S3) &&
        !BUTTON_IsPressed(BUTTON_S4) &&
        !BUTTON_IsPressed(BUTTON_S5) &&
        !BUTTON_IsPressed(BUTTON_S6)
    );

    while (
        BUTTON_IsPressed(BUTTON_S3) ||
        BUTTON_IsPressed(BUTTON_S4) ||
        BUTTON_IsPressed(BUTTON_S5) ||
        BUTTON_IsPressed(BUTTON_S6)
    );

    LCD_ClearScreen();
    for (int i = 0; i < 32; i++){
        LATA = 0xFFFF;
        LCD_PutChar(0xFFFF);
        __delay32(150000);
        LATA = 0x0000;
    }

    mainLoop();
    return 0;
}
