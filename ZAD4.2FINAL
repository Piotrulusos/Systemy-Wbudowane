// PIC24FJ128GA010 Configuration Bit Settings

#pragma config POSCMOD = XT
#pragma config OSCIOFNC = ON
#pragma config FCKSM = CSDCMD
#pragma config FNOSC = PRI
#pragma config IESO = ON

#pragma config WDTPS = PS32768
#pragma config FWPSA = PR128
#pragma config WINDIS = ON
#pragma config FWDTEN = ON
#pragma config ICS = PGx2
#pragma config GWRP = OFF
#pragma config GCP = OFF
#pragma config JTAGEN = OFF

#include <xc.h>
#include "lcd.h"
#include "buttons.h"
#include "string.h"

void system_init(void) {
    LCD_Initialize();
    TRISA = 0x0000;    
    }

void Text1(void) {    
    // LCD_PutChar(0xFFFF); // blok
    // LCD_PutChar(0x24); // dolar
    
    for (int i = 0; i <7; i++) {
        LATA = 0x0000;
        LCD_ClearScreen();
        __delay32(1000000);
        LCD_PutChar(0x20); // spacja
        for (int i = 0; i <3; i++){
            LCD_PutChar(0x21); // wykrzyknik
        }
        LCD_PutChar(0x20);
        LCD_PutChar(0x55); // U
        LCD_PutChar(0x57); // W
        LCD_PutChar(0x41); // A
        LCD_PutChar(0x47); // G
        LCD_PutChar(0x41); // A
        LCD_PutChar(0x20);
        for (int i = 0; i <3; i++){
            LCD_PutChar(0x21); // wykrzyknik
        }
        LCD_PutChar(0x20);
        LCD_PutChar('\n');
        LCD_PutChar(0x20); // spacja
        for (int i = 0; i <3; i++){
            LCD_PutChar(0x21); // wykrzyknik
        }
        LCD_PutChar(0x20);
        LCD_PutChar(0x55); // U
        LCD_PutChar(0x57); // W
        LCD_PutChar(0x41); // A
        LCD_PutChar(0x47); // G
        LCD_PutChar(0x41); // A
        LCD_PutChar(0x20);
        for (int i = 0; i <3; i++){
            LCD_PutChar(0x21); // wykrzyknik
        }
        LCD_PutChar(0x20);
        LATA = 0xFFFF;
        __delay32(3000000);
        
        
    }
    
    LCD_ClearScreen();    
    LCD_PutChar(0x43);  // C  
    LCD_PutChar(0x5A);  // Z  
    LCD_PutChar(0x59);  // Y  
    LCD_PutChar(0x20);  // spacja
    LCD_PutChar(0x43);  // C  
    LCD_PutChar(0x48);  // H  
    LCD_PutChar(0x43);  // C  
    LCD_PutChar(0x45);  // E  
    LCD_PutChar(0x53);  // S  
    LCD_PutChar(0x5A);  // Z  
    LCD_PutChar(0x20);  // spacja  
    LCD_PutChar(0x24);  // $  
    LCD_PutChar(0x24);  // $  
    LCD_PutChar(0x24);  // $  
    LCD_PutChar(0x20);  // spacja  
    LCD_PutChar(0x3F);  // ?
    LCD_PutChar('\n');
    LCD_PutChar(0x43);  // C  
    LCD_PutChar(0x5A);  // Z  
    LCD_PutChar(0x59);  // Y  
    LCD_PutChar(0x20);  // spacja  
    LCD_PutChar(0x43);  // C  
    LCD_PutChar(0x48);  // H  
    LCD_PutChar(0x43);  // C  
    LCD_PutChar(0x45);  // E  
    LCD_PutChar(0x53);  // S  
    LCD_PutChar(0x5A);  // Z  
    LCD_PutChar(0x20);  // spacja  
    LCD_PutChar(0x24);  // $  
    LCD_PutChar(0x24);  // $  
    LCD_PutChar(0x24);  // $  
    LCD_PutChar(0x20);  // spacja  
    LCD_PutChar(0x3F);  // ?
    __delay32(10000000);
    LATA = 0x0000;
    LCD_ClearScreen();
    unsigned char pasek[] = {
    0x80,
    0xC1,
    0xE4,
    0xFA,
    0xFF,
    };
    int pasek_idx = 0;
    
    for (int i = 0; i < 32; i++){        
        LCD_PutChar(0xFFFF);
        LATA = pasek[pasek_idx];
        pasek_idx++;
        if (pasek_idx >= sizeof(pasek)) pasek_idx = 0;
        __delay32(250000);
        
    }
    LATA = 0x0000;
    LCD_ClearScreen();
    for (int i = 0; i < 7; i++) {
        LATA = 0xFFFF;
        for (int i = 0; i < 5; i++){
           LCD_PutChar(0x3E); 
        }
        LCD_PutString("KASYNO", 6);
        for (int i = 0; i < 5; i++){
           LCD_PutChar(0x3C); 
        }   
        for (int i = 0; i < 3; i++){
           LCD_PutChar(0x3E); 
        }
        LCD_PutString("ZAPRASZAMY", 10);
        for (int i = 0; i < 3; i++){
           LCD_PutChar(0x3C); 
        }        
        __delay32(1500000);
        LATA = 0x0000;
        LCD_ClearScreen();
        __delay32(1500000);
    }

}


int main(void) {
    
    system_init();
    while (1) {        
        Text1();  
    }

    return 0;
}
